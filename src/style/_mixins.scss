@mixin box-shadow($shadow1: 0 0 0 1px rgba(63, 63, 68, 0.05), $shadow2: 0 1px 3px 0 rgba(63, 63, 68, 0.15)) {
	$params: $shadow1, $shadow2;
	-webkit-box-shadow: $params !important;
	-moz-box-shadow: $params !important;
	box-shadow: $params !important;
}

@mixin avatar($size: 200px) {
	box-sizing: border-box;
	width: $size;
	height:$size;
	border-radius: 50%;
	@include background;
	background-image: url('~@/assets/login7.jpg');
	@include box-shadow;
	position: relative;
}

@mixin avatar-layout($size: 200px) {
	box-sizing: border-box;
	position: absolute;
	opacity: 0;
	z-index: 100;
	cursor: pointer;
	width: $size;
	height:$size;
	border-radius: 50%;
	@include box-shadow;
}

@mixin text-field {
	display: inline-block;
	outline: none;
	text-decoration: none;
	font: 14px/100% Arial, Helvetica, sans-serif;
	padding: .5em;
	text-shadow: 0 1px 1px rgba(0, 0, 0, .3);
	@include rounded();
	@include box-shadow(0 0 0 1px rgba(63, 63, 68, 0.05), 0 1px 3px 0 rgba(63, 63, 68, 0.15));
}

@mixin transition($transitions...) {
	$unfoldedTransitions: ();
	@each $transition in $transitions {
	  $unfoldedTransitions: append($unfoldedTransitions, unfoldTransition($transition), comma);
	}
	
	-webkit-transition: $unfoldedTransitions;
	transition: $unfoldedTransitions;
  }
  
  @function unfoldTransition ($transition) {
	// Default values
	$property: all;
	$duration: .2s;
	$easing: null; // Browser default is ease, which is what we want
	$delay: null; // Browser default is 0, which is what we want
	$defaultProperties: ($property, $duration, $easing, $delay);
  
	// Grab transition properties if they exist
	$unfoldedTransition: ();
	@for $i from 1 through length($defaultProperties) {
	  $p: null;
	  @if $i <= length($transition) {
		$p: nth($transition, $i)
	  } @else {
		$p: nth($defaultProperties, $i)
	  }
	  $unfoldedTransition: append($unfoldedTransition, $p);
	}
  
	@return $unfoldedTransition;
  }

@mixin rounded($radius: 0.4rem) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
}

@mixin font($font-size: 1rem, $font-weight: medium, $line-height: 1.2rem) {
	font-size: $font-size;
	font-weight: $font-weight;
	line-height: $line-height;
}

@mixin background($background-size: cover, $background-color: $transparentColor, $background-position: center, $background-repeat: no-repeat) {
	background-size: $background-size;
	background-color: $background-color;
	background-position: $background-position;
	background-repeat: $background-repeat;
}

//MEDIA QUERIES

@mixin mq($size) {
	@if $size==ph {
		@media (max-width: 400px) {
			@content;
		}
	}

	@else if $size==xxs {
		@media (max-width: 480px) {
			@content;
		}
	}

	@else if $size==xs {
		@media (max-width: 600px) {
			@content;
		}
	}

	@else if $size==s {
		@media (max-width: 768px) {
			@content;
		}
	}

	@else if $size==m {
		@media (max-width: 900px) {
			@content;
		}
	}

	@else if $size==l {
		@media (max-width: 1024px) {
			@content;
		}
	}
	@else if $size==xl {
		@media (max-width: 1290px) {
			@content;
		}
	}
	@else if $size==xxl {
		@media (max-width: 2000px) {
			@content;
		}
	}

	@else if $size==xxxl {
		@media (min-width: 2001px) {
			@content;
		}
	}
}